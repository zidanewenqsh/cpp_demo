# CMakeList.txt: libtorchopencvdemo 的 CMake 项目，在此处包括源代码并定义
# 项目特定的逻辑。
#
cmake_minimum_required (VERSION 3.8)
project ("libtorchopencvdemo")
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_PREFIX_PATH D:/lib/libtorch_cpu)
# set(EXECUTABLE_OUTPUT_PATH F:/bin)
set(LIBRARY_OUTPUT_PATH F:/lib)
set(OpenCV_DIR D:/lib/opencv/build/x64/vc15/lib)
find_package(Torch REQUIRED)
find_package(OpenCV REQUIRED)
# 将源代码添加到此项目的可执行文件。
# add_executable(${PROJECT_NAME} main.cpp utils.cpp)
add_library(${PROJECT_NAME} SHARED utils.cpp)
# target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}" "${OpenCV_LIBS}")
target_link_libraries(${PROJECT_NAME} "${TORCH_LIBRARIES}" "${OpenCV_LIBS}")
if (MSVC)
    file(GLOB TORCH_DLLS "${TORCH_INSTALL_PREFIX}/lib/*.dll")
    add_custom_command(TARGET ${PROJECT_NAME}
            POST_BUILD
            COMMAND ${CMAKE_COMMAND} -E copy_if_different
            ${TORCH_DLLS}
            $<TARGET_FILE_DIR:${PROJECT_NAME}>)
    file(GLOB OPENCV_DLLS "D:/lib/opencv/build/x64/vc15/bin/*.dll")
    add_custom_command(TARGET ${PROJECT_NAME}
            POST_BUILD
            COMMAND ${CMAKE_COMMAND} -E copy_if_different
            ${OPENCV_DLLS}
            $<TARGET_FILE_DIR:${PROJECT_NAME}>)
endif (MSVC)
# TODO: 如有需要，请添加测试并安装目标。
#install(TARGETS ${PROJECT_NAME}
#        EXPORT libtorchopencvdemo_Targets
#        LIBRARY DESTINATION lib  # 动态库安装路径
#        ARCHIVE DESTINATION lib  # 静态库安装路径
#        RUNTIME DESTINATION bin  # 可执行文件安装路径
#        PUBLIC_HEADER DESTINATION include  # 头文件安装路径
#        )
#set(CMAKE_INSTALL_PREFIX ./installs)
#install(TARGETS ${PROJECT_NAME} DESTINATION bin)


